{"version":3,"sources":["Components/Card/Card.component.jsx","Components/CardList/CardList.component.jsx","Components/SearchBox/SearchBox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","onChange","type","App","e","setState","search","target","value","state","fetch","then","response","json","users","filteredMonsters","this","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,mBAAmBC,IAAG,+BAA4BH,EAAMI,QAAQC,GAA1C,eAC/B,mCAAML,EAAMI,QAAQE,KAApB,OACA,kCAAKN,EAAMI,QAAQG,MAAnB,WCHKC,EAAW,SAACR,GAAD,OACpB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAG,cAAC,EAAD,CAAuBA,QAAUA,GAAtBA,EAAQC,UCH5CM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,SAAd,OACrB,uBACIZ,UAAY,SACZa,KAAK,SACLF,YAAaA,EACbC,SAAWA,MC4BJE,E,kDA9Bb,aAAc,IAAD,8BACX,gBAWFF,SAAW,SAACG,GACV,EAAKC,SAAS,CAACC,OAAOF,EAAEG,OAAOC,SAX/B,EAAKC,MAAQ,CACXZ,SAAW,GACXS,OAAS,IAJA,E,qDAOb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACR,SAAWiB,S,oBAK3C,WAAS,IAAD,OACFC,EAAmBC,KAAKP,MAAMZ,SAASoB,QAAO,SAACzB,GAAD,OAAWA,EAAQE,KAAKwB,cAAcC,SAAS,EAAKV,MAAMH,OAAOY,kBACnH,OACE,sBAAK7B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAc,kBACdC,SAAYe,KAAKf,WAEnB,cAAC,EAAD,CAAUJ,SAAYkB,W,GAzBZK,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6d3d540b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img alt='monster img here' src = {`https://robohash.org/${props.monster.id}?set=set2`}/>\r\n        <h1> {props.monster.name} </h1>\r\n        <p> {props.monster.email} </p>\r\n    </div>\r\n)","import React from 'react';\r\nimport './CardList.css'\r\nimport {Card} from '../Card/Card.component.jsx'\r\n\r\nexport const CardList = (props) => (\r\n    <div className='card-list'>\r\n        {props.monsters.map(monster=> <Card key={monster.id} monster ={monster}/>)}\r\n    </div>\r\n)","import React from 'react';\r\nimport './SearchBox.css'\r\n\r\nexport const SearchBox = ({placeholder,onChange}) => (\r\n    <input \r\n        className = 'search'\r\n        type='search' \r\n        placeholder={placeholder} \r\n        onChange= {onChange}\r\n    />\r\n)","import './App.css';\nimport React from 'react';\nimport { CardList } from './Components/CardList/CardList.component.jsx';\nimport {SearchBox} from './Components/SearchBox/SearchBox.component.jsx';\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      monsters : [],\n      search : ''\n    }\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response =>response.json())\n    .then(users => this.setState({monsters : users}))\n  }\n  onChange = (e) => {\n    this.setState({search:e.target.value})\n  }\n  render(){\n    let filteredMonsters = this.state.monsters.filter((monster)=>monster.name.toLowerCase().includes(this.state.search.toLowerCase()))\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox \n          placeholder = 'search monsters'\n          onChange = {this.onChange}\n        />\n        <CardList monsters = {filteredMonsters}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}